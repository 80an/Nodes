#!/bin/bash

CONFIG_DIR="$HOME/.validator_config"
ENV_FILE="$CONFIG_DIR/env"
MONITOR_PIDS_FILE="$CONFIG_DIR/monitor_pids"
PROGRAM_DIR="$HOME/0g/Validator"
LOG_FILE="$CONFIG_DIR/install.log"

mkdir -p "$CONFIG_DIR"

# === –§—É–Ω–∫—Ü–∏–∏ ===

log() {
  echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

stop_monitoring() {
  if [ -f "$MONITOR_PIDS_FILE" ]; then
    log "‚õî –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∏..."
    while IFS= read -r pid; do
      if ps -p "$pid" > /dev/null 2>&1; then
        kill "$pid"
        log "üîª –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å —Å PID $pid"
      fi
    done < "$MONITOR_PIDS_FILE"
    rm -f "$MONITOR_PIDS_FILE"
    log "‚úÖ –í—Å–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."
  else
    log "‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞."
  fi
}

ensure_bin_in_path() {
  local bashrc="$HOME/.bashrc"
  local profile="$HOME/.profile"

  for file in "$bashrc" "$profile"; do
    if ! grep -q 'export PATH="$HOME/bin:$PATH"' "$file"; then
      echo 'export PATH="$HOME/bin:$PATH"' >> "$file"
      log "‚úÖ –ü—É—Ç—å ~/bin –¥–æ–±–∞–≤–ª–µ–Ω –≤ $file."
    else
      log "‚ÑπÔ∏è –ü—É—Ç—å ~/bin —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ $file."
    fi

    if [ "$file" = "$profile" ]; then
      if grep -q 'source ~/.bashrc' "$file"; then
        log "‚ÑπÔ∏è .bashrc —É–∂–µ –ø–æ–¥–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–∑ $file."
      else
        echo 'source ~/.bashrc' >> "$file"
        log "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω source ~/.bashrc –≤ $file."
      fi
    fi

    if ! grep -q "source $ENV_FILE" "$file"; then
      echo "source $ENV_FILE" >> "$file"
      log "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω source $ENV_FILE –≤ $file."
    else
      log "‚ÑπÔ∏è $ENV_FILE —É–∂–µ –ø–æ–¥–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–∑ $file."
    fi
  done

  export PATH="$HOME/bin:$PATH"
  hash -r
  log "üîÅ –û–±–Ω–æ–≤–ª—ë–Ω PATH –∏ —Å–±—Ä–æ—à–µ–Ω –∫—ç—à –∫–æ–º–∞–Ω–¥."
}

run_setup() {
  bash "$PROGRAM_DIR/setup_per.sh" | tee -a "$LOG_FILE"
  log "üöÄ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é..."
  source "$PROGRAM_DIR/menu_validator.sh"
}

install_program() {
  log "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã..."
  stop_monitoring
  rm -rf "$PROGRAM_DIR"
  mkdir -p "$HOME/0g"

  TMP_DIR=$(mktemp -d)
  git clone --depth=1 https://github.com/80an/Nodes "$TMP_DIR" | tee -a "$LOG_FILE"

  rsync -a --exclude='tech_menu.sh' --exclude='README.md' "$TMP_DIR/0g/Validator/" "$PROGRAM_DIR/" | tee -a "$LOG_FILE"
  rm -rf "$TMP_DIR"

  ensure_bin_in_path
  run_setup
}

update_program() {
  log "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã..."
  stop_monitoring
  rm -rf "$PROGRAM_DIR"
  mkdir -p "$HOME/0g"

  TMP_DIR=$(mktemp -d)
  git clone --depth=1 https://github.com/80an/Nodes "$TMP_DIR" | tee -a "$LOG_FILE"

  rsync -a --exclude='tech_menu.sh' --exclude='README.md' "$TMP_DIR/0g/Validator/" "$PROGRAM_DIR/" | tee -a "$LOG_FILE"
  rm -rf "$TMP_DIR"

  ensure_bin_in_path
  run_setup
}

delete_program() {
  log "üßπ –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã..."
  stop_monitoring
  rm -rf "$HOME/0g" "$CONFIG_DIR"
  rm -f "$HOME/bin/validator"
  sed -i '/export PATH="$HOME\/bin:$PATH"/d' "$HOME/.bashrc"
  sed -i '/export PATH="$HOME\/bin:$PATH"/d' "$HOME/.profile"
  log "‚úÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∏ –≤—Å–µ –µ—ë –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã."
}

# === –ú–µ–Ω—é ===

while true; do
  echo ""
  echo "üõ†Ô∏è  –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –º–µ–Ω—é"
  echo "========================="
  echo "1) üì• –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"
  echo "2) üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç—ã"
  echo "3) üßπ –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –ø–æ–ª–Ω–æ—Å—Ç—å—é"
  echo "4) üö™ –í—ã–π—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å"
  echo "========================="

  read -p "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç: " choice

  case $choice in
    1)
      install_program
      break
      ;;
    2)
      update_program
      break
      ;;
    3)
      delete_program
      break
      ;;
    4)
      echo "üëã –í–æ–∑–≤—Ä–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª—å."
      break
      ;;
    *)
      echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
      ;;
  esac

done
