sync_keys_from_os_to_file() {
  echo "üîë –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–ª—é—á–µ–π –∏–∑ keyring-backend=os –≤ keyring-backend=file..."

   # ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π —Ñ–ª–∞–≥ --output
  local os_keys
  os_keys=$(printf "%s\n" "$KEYRING_PASSWORD" | 0gchaind keys list --keyring-backend os --output json | jq -r '.[].name')


  for key in $os_keys; do
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–ª—é—á —É–∂–µ –≤ file-—Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    local exists
    exists=$(0gchaind keys show "$key" --keyring-backend file -o json 2>/dev/null)

    if [[ -z "$exists" ]]; then
      echo "‚ûï –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º $key –≤ file-—Ö—Ä–∞–Ω–∏–ª–∏—â–µ"
      printf "%s\n" "$KEYRING_PASSWORD" | 0gchaind keys export "$key" --keyring-backend os | \
      0gchaind keys import "$key" --keyring-backend file
    else
      echo "‚úÖ –ö–ª—é—á $key —É–∂–µ –µ—Å—Ç—å –≤ file-—Ö—Ä–∞–Ω–∏–ª–∏—â–µ"
    fi
  done

  echo "üéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
}
