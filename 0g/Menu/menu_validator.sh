#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
B_GREEN="\e[32m"
B_YELLOW="\e[33m"
B_RED="\e[31m"
NO_COLOR="\e[0m"

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
ENV_FILE="$HOME/.validator_env"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ pass –∏ –Ω–∞–ª–∏—á–∏—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
if ! command -v pass &> /dev/null || ! pass show validator/keyring_password &> /dev/null; then
  echo -e "\nüîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–∞—Ä–æ–ª–µ–π pass..."
  source <(wget -qO- 'https://raw.githubusercontent.com/80an/Nodes/refs/heads/main/!tools/init-pass.sh')
fi

# –ü–æ–ª—É—á–∞–µ–º KEYRING_PASSWORD –∏–∑ pass
KEYRING_PASSWORD=$(pass validator/keyring_password)

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env —Ñ–∞–π–ª–∞
load_env() {
  if [ -f "$ENV_FILE" ]; then
    echo "–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞..."
    source "$ENV_FILE"
  else
    echo "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω –∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
  fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ .env —Ñ–∞–π–ª
save_env() {
  echo "–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env —Ñ–∞–π–ª..."
  cat > "$ENV_FILE" <<EOF
WALLET_NAME=$WALLET_NAME
WALLET_ADDRESS=$WALLET_ADDRESS
VALIDATOR_ADDRESS=$VALIDATOR_ADDRESS
TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN
TELEGRAM_CHAT_ID=$TELEGRAM_CHAT_ID
EOF
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö
setup_validator() {
  #clear
  echo "========= üõ†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ ========="
  echo "–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:"

  # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env, –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  load_env

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ KEYRING_PASSWORD –Ω–µ –ø—É—Å—Ç–æ–π
  if [ -z "$KEYRING_PASSWORD" ]; then
    echo "üì• –ó–∞–≥—Ä—É–∂–∞–µ–º KEYRING_PASSWORD –∏–∑ pass..."
    KEYRING_PASSWORD=$(pass validator/keyring_password)
  fi

  echo "–¢–µ–∫—É—â–∏–π KEYRING_PASSWORD: $KEYRING_PASSWORD"

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è WALLET_NAME –∏ WALLET_ADDRESS
  echo "–¢–µ–∫—É—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
  echo "WALLET_NAME: $WALLET_NAME"
  echo "WALLET_ADDRESS: $WALLET_ADDRESS"

  # –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—É—Å—Ç—ã–µ, –∑–∞–ø—Ä–æ—Å–∏–º –∏—Ö —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if [ -z "$WALLET_NAME" ] || [ -z "$WALLET_ADDRESS" ]; then
    echo "‚ùó –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ—à–µ–ª—å–∫–∞."
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º, —á—Ç–æ –º—ã —Ö–æ—Ç–∏–º –≤–≤–µ—Å—Ç–∏: –∏–º—è –∏–ª–∏ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞
    echo "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–≤–æ–¥–∏—Ç—å:"
    echo "1) –í–≤–µ—Å—Ç–∏ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞"
    echo "2) –í–≤–µ—Å—Ç–∏ –∏–º—è –∫–æ—à–µ–ª—å–∫–∞"
    read -p "–ß—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ? (1 –∏–ª–∏ 2): " CHOICE

    if [ "$CHOICE" -eq 1 ]; then
      # –í–≤–æ–¥–∏–º –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞
      read -p "–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞: " WALLET_ADDRESS
      WALLET_NAME=$(printf "%s" "$KEYRING_PASSWORD" | 0gchaind keys show "$WALLET_ADDRESS" --output json | jq -r '.name') # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∫–æ—à–µ–ª—å–∫–∞
    elif [ "$CHOICE" -eq 2 ]; then
      # –í–≤–æ–¥–∏–º –∏–º—è –∫–æ—à–µ–ª—å–∫–∞
      read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–æ—à–µ–ª—å–∫–∞: " WALLET_NAME
      WALLET_ADDRESS=$(printf "%s" "$KEYRING_PASSWORD" | 0gchaind keys show "$WALLET_NAME" --bech acc -a)
    else
      echo -e "${B_RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ 1 –∏–ª–∏ 2.${NO_COLOR}"
      exit 1
    fi
  fi

  # –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞
  VALIDATOR_ADDRESS=$(printf "%s" "$KEYRING_PASSWORD" | 0gchaind keys show "$WALLET_NAME" --bech val -a)

  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env —Ñ–∞–π–ª
  save_env

  # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  echo "‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã:"
  echo "WALLET_NAME: $WALLET_NAME"
  echo "WALLET_ADDRESS: $WALLET_ADDRESS"
  echo "VALIDATOR_ADDRESS: $VALIDATOR_ADDRESS"
}

# –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞
setup_validator

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é
show_menu() {
  #clear
  echo "========= üìã –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–º ========="
  echo "1) üí∞ –°–æ–±—Ä–∞—Ç—å –∫–æ–º–∏—Å—Å–∏–∏ –∏ —Ä–µ–≤–∞—Ä–¥—ã –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞"
  echo "2) üí∏ –°–æ–±—Ä–∞—Ç—å —Ä–µ–≤–∞—Ä–¥—ã —Å–æ –≤—Å–µ—Ö –∫–æ—à–µ–ª—å–∫–æ–≤"
  echo "3) üì• –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—É —Å–æ –≤—Å–µ—Ö –∫–æ—à–µ–ª—å–∫–æ–≤"
  echo "4) üó≥ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ"
  echo "5) üö™ –í—ã—Ö–æ–¥ –∏–∑ —Ç—é—Ä—å–º—ã (unjail)"
  echo "6) ‚úÖ –í–∫–ª—é—á–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞"
  echo "7) ‚õî –û—Ç–∫–ª—é—á–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞"
  echo "8) ‚ùå –í—ã—Ö–æ–¥"
  echo "=================================================="
}

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
load_env

# –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –≤—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
if [ -z "$KEYRING_PASSWORD" ]; then
  setup_validator
fi

while true; do
  show_menu
  read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: " choice

  case $choice in
    1)
      echo "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–±–æ—Ä –∫–æ–º–∏—Å—Å–∏–π –∏ —Ä–µ–≤–∞—Ä–¥–æ–≤ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞..."
      printf "%s" "$KEYRING_PASSWORD" | 0gchaind tx distribution withdraw-rewards "$VALIDATOR_ADDRESS" \
        --chain-id="zgtendermint_16600-2" \
        --from "$WALLET_NAME" \
        --commission \
        --gas=auto \
        --gas-prices 0.003ua0gi \
        --gas-adjustment=1.4 \
        -y
      ;;
    2)
      echo "–°–±–æ—Ä —Ä–µ–≤–∞—Ä–¥–æ–≤ —Å–æ –≤—Å–µ—Ö –∫–æ—à–µ–ª—å–∫–æ–≤..."
      source <(wget -qO- 'https://raw.githubusercontent.com/80an/Nodes/refs/heads/main/0g/all_reward.sh')
      ;;
    3)
      echo "–î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—É —Å–æ –≤—Å–µ—Ö –∫–æ—à–µ–ª—å–∫–æ–≤..."
      source <(wget -qO- 'https://raw.githubusercontent.com/80an/Nodes/refs/heads/main/0g/all_delegation.sh')
      ;;
    4)
      echo "–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è..."
      echo "üìÆ –ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–ø–æ–∑–∞–ª–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è..."

  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–ø–æ–∑–∞–ª–æ–≤
  proposals=$(0gchaind q gov proposals --status voting_period --output json)

  proposal_count=$(echo "$proposals" | jq '.proposals | length')

  if [ "$proposal_count" -eq 0 ]; then
    echo "‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–ø–æ–∑–∞–ª–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è."
    return 1
  fi

  echo "üìã –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–ø–æ–∑–∞–ª–æ–≤:"
  for ((i=0; i<proposal_count; i++)); do
    id=$(echo "$proposals" | jq -r ".proposals[$i].id")
    title=$(echo "$proposals" | jq -r ".proposals[$i].content.title")
    echo "  $id) $title"
  done

  read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–æ–ø–æ–∑–∞–ª–∞ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: " PROPOSAL_ID

  echo "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≥–æ–ª–æ—Å–∞:"
  echo "1) ‚úÖ –ó–∞"
  echo "2) ‚ùå –ü—Ä–æ—Ç–∏–≤"
  echo "3) ‚õî –ü—Ä–æ—Ç–∏–≤ —Å –≤–µ—Ç–æ"
  echo "4) ‚ö™ –í–æ–∑–¥–µ—Ä–∂–∞—Ç—å—Å—è"
  read -p "–í–∞—à –≤—ã–±–æ—Ä (1/2/3/4): " VOTE_CHOICE

  case $VOTE_CHOICE in
    1) VOTE_OPTION="yes" ;;
    2) VOTE_OPTION="no" ;;
    3) VOTE_OPTION="no_with_veto" ;;
    4) VOTE_OPTION="abstain" ;;
    *)
      echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!"
      return 1
      ;;
  esac

  echo "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ–ª–æ—Å–∞ '$VOTE_OPTION' –ø–æ –ø—Ä–æ–ø–æ–∑–∞–ª—É #$PROPOSAL_ID..."

  printf "%s" "$KEYRING_PASSWORD" | 0gchaind tx gov vote "$PROPOSAL_ID" "$VOTE_OPTION" \
    --from "$WALLET_NAME" \
    --chain-id="zgtendermint_16600-2" \
    --gas=auto \
    --gas-prices=0.003ua0gi \
    --gas-adjustment=1.4 \
    -y

  echo "‚úÖ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
      ;;
    5)
      echo "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—ã—Ö–æ–¥ –∏–∑ —Ç—é—Ä—å–º—ã (unjail)..."
      printf "%s" "$KEYRING_PASSWORD" | 0gchaind tx slashing unjail \
        --from "$WALLET_NAME" \
        --chain-id zgtendermint_16600-2 \
        --gas-adjustment 1.5 \
        --gas auto \
        --gas-prices 0.003ua0gi \
        -y
      ;;
    6)
      echo "‚úÖ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞..."

  if [[ -z "$TELEGRAM_BOT_TOKEN" || -z "$TELEGRAM_CHAT_ID" ]]; then
    echo -e "${B_YELLOW}‚ö†Ô∏è Telegram Token –∏ Chat ID –Ω–µ –∑–∞–¥–∞–Ω—ã.${NO_COLOR}"
    read -p "–í–≤–µ–¥–∏—Ç–µ Telegram Bot Token: " TELEGRAM_BOT_TOKEN
    read -p "–í–≤–µ–¥–∏—Ç–µ Telegram Chat ID: " TELEGRAM_CHAT_ID
    save_env  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ .env
  else
    echo "–¢–µ–∫—É—â–∏–π Telegram Bot Token: $TELEGRAM_BOT_TOKEN"
    echo "–¢–µ–∫—É—â–∏–π Telegram Chat ID: $TELEGRAM_CHAT_ID"
    read -p "‚ùì –•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ? (y/N): " change_choice
    if [[ "$change_choice" =~ ^[Yy]$ ]]; then
      read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π Telegram Bot Token: " TELEGRAM_BOT_TOKEN
      read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π Telegram Chat ID: " TELEGRAM_CHAT_ID
      save_env
    fi
  fi

  if [[ -n "$TELEGRAM_BOT_TOKEN" && -n "$TELEGRAM_CHAT_ID" ]]; then
    nohup bash "$HOME/only_monitoring.sh" > /dev/null 2>&1 &
    echo "üì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ."
  else
    echo -e "${B_RED}‚ùå –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω. Telegram –¥–∞–Ω–Ω—ã–µ –Ω–µ —É–∫–∞–∑–∞–Ω—ã.${NO_COLOR}"
  fi
  ;;
    7)
      echo "‚õî –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞..."
      pkill -f only_monitoring.sh
      ;;
    8)
      echo "–í—ã—Ö–æ–¥..."
      break
      ;;
    *)
      echo "‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
      ;;
  esac
  echo
  read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
done
