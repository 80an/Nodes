#!/bin/bash

# –¶–≤–µ—Ç–∞
B_GREEN="\e[32m"
B_YELLOW="\e[33m"
B_RED="\e[31m"
NO_COLOR="\e[0m"

MONITOR_PID_FILE="/tmp/monitor_pid"
ENV_FILE="$HOME/.monitor_env"

# –ó–∞–≥—Ä—É–∑–∫–∞ .env, –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ -f "$ENV_FILE" ]; then
  source "$ENV_FILE"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram
setup_telegram() {
  echo -e "${B_YELLOW}üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram...${NO_COLOR}"
  read -p "–í–≤–µ–¥–∏—Ç–µ Telegram Bot Token: " TELEGRAM_BOT_TOKEN
  read -p "–í–≤–µ–¥–∏—Ç–µ Telegram Chat ID: " TELEGRAM_CHAT_ID
  echo "TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN" > "$ENV_FILE"
  echo "TELEGRAM_CHAT_ID=$TELEGRAM_CHAT_ID" >> "$ENV_FILE"
  echo -e "${B_GREEN}‚úÖ Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.${NO_COLOR}"
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
send_telegram_alert() {
  local message="$1"
  curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
    -d chat_id="$TELEGRAM_CHAT_ID" \
    -d parse_mode="HTML" \
    -d text="$message" > /dev/null
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
get_system_info() {
  local disk_usage=$(df -h / | awk 'NR==2{print $5}')
  local mem_info=$(free -h | awk '/Mem:/{print $3 " / " $2}')
  echo -e "üìä <b>–†–µ—Å—É—Ä—Å—ã:</b>\n‚Ä¢ üíæ –î–∏—Å–∫: $disk_usage\n‚Ä¢ üß† RAM: $mem_info"
}

# –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
start_monitoring() {
  if [ -f "$MONITOR_PID_FILE" ] && kill -0 "$(cat "$MONITOR_PID_FILE")" 2>/dev/null; then
    echo -e "${B_YELLOW}‚ö†Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–∂–µ –∑–∞–ø—É—â–µ–Ω (PID $(cat $MONITOR_PID_FILE))${NO_COLOR}"
    return
  fi

  echo -e "${B_GREEN}‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...${NO_COLOR}"
  #bash -c "source <(wget -qO- 'https://raw.githubusercontent.com/80an/Nodes/refs/heads/main/!tools/monitor_resources.sh')" &
  nohup bash -c "source <(wget -qO- 'https://raw.githubusercontent.com/80an/Nodes/refs/heads/main/!tools/monitor_resources.sh')" &> /dev/null &
  MONITOR_PID=$!
  echo "$MONITOR_PID" > "$MONITOR_PID_FILE"
  echo -e "${B_GREEN}‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω —Å PID $MONITOR_PID${NO_COLOR}"

  # –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ –æ —Ä–µ—Å—É—Ä—Å–∞—Ö
  local disk_usage=$(df -h / | awk 'NR==2{print $5}')
  local mem_info=$(free -h | awk '/Mem:/{print $3 " / " $2}')

  # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ —Å—Ç—Ä–æ–∫
  read -r -d '' message <<EOF
<b>‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤ –∑–∞–ø—É—â–µ–Ω</b>

üÜî <code>$MONITOR_PID</code>

üìä <b>–†–µ—Å—É—Ä—Å—ã:</b>
‚Ä¢ üíæ –î–∏—Å–∫: $disk_usage
‚Ä¢ üß† RAM: $mem_info
EOF

  send_telegram_alert "$message"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ —Ñ–æ–Ω–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
stop_monitoring() {
  if [ -f "$MONITOR_PID_FILE" ]; then
    MONITOR_PID=$(cat "$MONITOR_PID_FILE")
    if kill -0 "$MONITOR_PID" 2>/dev/null; then
      kill "$MONITOR_PID"
      echo -e "${B_RED}‚õî –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (PID $MONITOR_PID)${NO_COLOR}"
      rm -f "$MONITOR_PID_FILE"
      send_telegram_alert "‚õî –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (PID $MONITOR_PID)"
      
      # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
      pkill -f check_disk_space
      pkill -f check_memory
      echo -e "${B_RED}‚õî –§–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã (–¥–∏—Å–∫ –∏ –ø–∞–º—è—Ç—å) –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.${NO_COLOR}"
    else
      echo -e "${B_YELLOW}‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–¥–∞–ª—è—é PID-—Ñ–∞–π–ª.${NO_COLOR}"
      rm -f "$MONITOR_PID_FILE"
    fi
  else
    echo -e "${B_RED}üö´ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ –∑–∞–ø—É—â–µ–Ω${NO_COLOR}"
  fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
check_status() {
  if [ -f "$MONITOR_PID_FILE" ]; then
    MONITOR_PID=$(cat "$MONITOR_PID_FILE")
    if kill -0 "$MONITOR_PID" 2>/dev/null; then
      echo -e "${B_GREEN}‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç (PID $MONITOR_PID)${NO_COLOR}"
    else
      echo -e "${B_YELLOW}‚ö†Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, –Ω–æ PID-—Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NO_COLOR}"
    fi
  else
    echo -e "${B_RED}‚ùå –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ –∑–∞–ø—É—â–µ–Ω${NO_COLOR}"
  fi
}

# –ú–µ–Ω—é
menu() {
  echo
  echo -e "${B_YELLOW}========= üõ† –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º —Ä–µ—Å—É—Ä—Å–æ–≤ =========${NO_COLOR}"
  echo -e "1) ‚ñ∂Ô∏è  –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
  echo -e "2) ‚èπ  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
  echo -e "3) ‚ÑπÔ∏è  –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
  echo -e "4) ‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram"
  echo -e "5) ‚ùå –í—ã—Ö–æ–¥"
  echo -e "${B_YELLOW}======================================================${NO_COLOR}"
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
while true; do
  menu
  read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: " choice
  case $choice in
    1) start_monitoring ;;
    2) stop_monitoring ;;
    3) check_status ;;
    4) setup_telegram ;;
    5)
      echo -e "${B_YELLOW}üëã –í—ã—Ö–æ–¥...${NO_COLOR}"
      break
      ;;
    *) echo -e "${B_RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ.${NO_COLOR}" ;;
  esac
done

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
check_disk_space() {
  while true; do
    disk_usage=$(df -h / | awk 'NR==2 {print $5}' | tr -d '%')

    if [ "$disk_usage" -ge 100 ]; then
      send_telegram_alert "‚ùå –î–ò–°–ö –ó–ê–ü–û–õ–ù–ï–ù –ù–ê 100%! –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ!"
    elif [ "$disk_usage" -ge 98 ]; then
      send_telegram_alert "üö® –î–∏—Å–∫ –ø–æ—á—Ç–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω: ${disk_usage}%! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –æ—Å–≤–æ–±–æ–¥–∏—Ç–µ –º–µ—Å—Ç–æ."
    elif [ "$disk_usage" -ge 96 ]; then
      send_telegram_alert "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –¥–∏—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${disk_usage}%. –ó–∞–¥—É–º–∞–π—Ç–µ—Å—å –æ —Ç–æ–º, —á—Ç–æ–±—ã –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –º–µ—Å—Ç–æ."
    fi

    sleep 300  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
  done
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
check_memory() {
  while true; do
    mem_total=$(grep MemTotal /proc/meminfo | awk '{print $2}')
    mem_available=$(grep MemAvailable /proc/meminfo | awk '{print $2}')
    mem_used=$((mem_total - mem_available))
    mem_usage_percent=$((mem_used * 100 / mem_total))

    if [ "$mem_usage_percent" -ge 99 ]; then
      send_telegram_alert "‚ùå –û–ó–£ –ø–æ—á—Ç–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–Ω—è—Ç–∞ (${mem_usage_percent}%). –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞!"
    elif [ "$mem_usage_percent" -ge 95 ]; then
      send_telegram_alert "üö® –í—ã—Å–æ–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${mem_usage_percent}%. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏."
    elif [ "$mem_usage_percent" -ge 85 ]; then
      send_telegram_alert "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 85% (${mem_usage_percent}%)."
    fi

    sleep 300  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
  done
}

# –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
#check_disk_space &
#check_memory &
nohup bash -c 'check_disk_space' &> /dev/null &
nohup bash -c 'check_memory' &> /dev/null &
